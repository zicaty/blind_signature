/**
 * Autogenerated by Thrift Compiler (0.21.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package kl.hsm.server.svc.p11;

/**
 * 机制参数
 */
@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.21.0)", date = "2025-01-24")
public class Parameter implements org.apache.thrift.TBase<Parameter, Parameter._Fields>, java.io.Serializable, Cloneable, Comparable<Parameter> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Parameter");

  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField DEFAULT_PARAMETER_FIELD_DESC = new org.apache.thrift.protocol.TField("defaultParameter", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField GCM_PARAMETER_FIELD_DESC = new org.apache.thrift.protocol.TField("gcmParameter", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField OAEP_PARAMETER_FIELD_DESC = new org.apache.thrift.protocol.TField("oaepParameter", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField PSS_PARAMETER_FIELD_DESC = new org.apache.thrift.protocol.TField("pssParameter", org.apache.thrift.protocol.TType.STRUCT, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ParameterStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ParameterTupleSchemeFactory();

  /**
   * 
   * @see ParameterType
   */
  public @org.apache.thrift.annotation.Nullable ParameterType type; // required
  public @org.apache.thrift.annotation.Nullable DefaultParameter defaultParameter; // optional
  public @org.apache.thrift.annotation.Nullable GCMParameter gcmParameter; // optional
  public @org.apache.thrift.annotation.Nullable OAEPParameter oaepParameter; // optional
  public @org.apache.thrift.annotation.Nullable PSSParameter pssParameter; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 
     * @see ParameterType
     */
    TYPE((short)1, "type"),
    DEFAULT_PARAMETER((short)2, "defaultParameter"),
    GCM_PARAMETER((short)3, "gcmParameter"),
    OAEP_PARAMETER((short)4, "oaepParameter"),
    PSS_PARAMETER((short)5, "pssParameter");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TYPE
          return TYPE;
        case 2: // DEFAULT_PARAMETER
          return DEFAULT_PARAMETER;
        case 3: // GCM_PARAMETER
          return GCM_PARAMETER;
        case 4: // OAEP_PARAMETER
          return OAEP_PARAMETER;
        case 5: // PSS_PARAMETER
          return PSS_PARAMETER;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.DEFAULT_PARAMETER,_Fields.GCM_PARAMETER,_Fields.OAEP_PARAMETER,_Fields.PSS_PARAMETER};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ParameterType.class)));
    tmpMap.put(_Fields.DEFAULT_PARAMETER, new org.apache.thrift.meta_data.FieldMetaData("defaultParameter", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DefaultParameter.class)));
    tmpMap.put(_Fields.GCM_PARAMETER, new org.apache.thrift.meta_data.FieldMetaData("gcmParameter", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GCMParameter.class)));
    tmpMap.put(_Fields.OAEP_PARAMETER, new org.apache.thrift.meta_data.FieldMetaData("oaepParameter", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, OAEPParameter.class)));
    tmpMap.put(_Fields.PSS_PARAMETER, new org.apache.thrift.meta_data.FieldMetaData("pssParameter", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PSSParameter.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Parameter.class, metaDataMap);
  }

  public Parameter() {
    this.type = kl.hsm.server.svc.p11.ParameterType.NONE;

  }

  public Parameter(
    ParameterType type)
  {
    this();
    this.type = type;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Parameter(Parameter other) {
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetDefaultParameter()) {
      this.defaultParameter = new DefaultParameter(other.defaultParameter);
    }
    if (other.isSetGcmParameter()) {
      this.gcmParameter = new GCMParameter(other.gcmParameter);
    }
    if (other.isSetOaepParameter()) {
      this.oaepParameter = new OAEPParameter(other.oaepParameter);
    }
    if (other.isSetPssParameter()) {
      this.pssParameter = new PSSParameter(other.pssParameter);
    }
  }

  @Override
  public Parameter deepCopy() {
    return new Parameter(this);
  }

  @Override
  public void clear() {
    this.type = kl.hsm.server.svc.p11.ParameterType.NONE;

    this.defaultParameter = null;
    this.gcmParameter = null;
    this.oaepParameter = null;
    this.pssParameter = null;
  }

  /**
   * 
   * @see ParameterType
   */
  @org.apache.thrift.annotation.Nullable
  public ParameterType getType() {
    return this.type;
  }

  /**
   * 
   * @see ParameterType
   */
  public Parameter setType(@org.apache.thrift.annotation.Nullable ParameterType type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DefaultParameter getDefaultParameter() {
    return this.defaultParameter;
  }

  public Parameter setDefaultParameter(@org.apache.thrift.annotation.Nullable DefaultParameter defaultParameter) {
    this.defaultParameter = defaultParameter;
    return this;
  }

  public void unsetDefaultParameter() {
    this.defaultParameter = null;
  }

  /** Returns true if field defaultParameter is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultParameter() {
    return this.defaultParameter != null;
  }

  public void setDefaultParameterIsSet(boolean value) {
    if (!value) {
      this.defaultParameter = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public GCMParameter getGcmParameter() {
    return this.gcmParameter;
  }

  public Parameter setGcmParameter(@org.apache.thrift.annotation.Nullable GCMParameter gcmParameter) {
    this.gcmParameter = gcmParameter;
    return this;
  }

  public void unsetGcmParameter() {
    this.gcmParameter = null;
  }

  /** Returns true if field gcmParameter is set (has been assigned a value) and false otherwise */
  public boolean isSetGcmParameter() {
    return this.gcmParameter != null;
  }

  public void setGcmParameterIsSet(boolean value) {
    if (!value) {
      this.gcmParameter = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public OAEPParameter getOaepParameter() {
    return this.oaepParameter;
  }

  public Parameter setOaepParameter(@org.apache.thrift.annotation.Nullable OAEPParameter oaepParameter) {
    this.oaepParameter = oaepParameter;
    return this;
  }

  public void unsetOaepParameter() {
    this.oaepParameter = null;
  }

  /** Returns true if field oaepParameter is set (has been assigned a value) and false otherwise */
  public boolean isSetOaepParameter() {
    return this.oaepParameter != null;
  }

  public void setOaepParameterIsSet(boolean value) {
    if (!value) {
      this.oaepParameter = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PSSParameter getPssParameter() {
    return this.pssParameter;
  }

  public Parameter setPssParameter(@org.apache.thrift.annotation.Nullable PSSParameter pssParameter) {
    this.pssParameter = pssParameter;
    return this;
  }

  public void unsetPssParameter() {
    this.pssParameter = null;
  }

  /** Returns true if field pssParameter is set (has been assigned a value) and false otherwise */
  public boolean isSetPssParameter() {
    return this.pssParameter != null;
  }

  public void setPssParameterIsSet(boolean value) {
    if (!value) {
      this.pssParameter = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((ParameterType)value);
      }
      break;

    case DEFAULT_PARAMETER:
      if (value == null) {
        unsetDefaultParameter();
      } else {
        setDefaultParameter((DefaultParameter)value);
      }
      break;

    case GCM_PARAMETER:
      if (value == null) {
        unsetGcmParameter();
      } else {
        setGcmParameter((GCMParameter)value);
      }
      break;

    case OAEP_PARAMETER:
      if (value == null) {
        unsetOaepParameter();
      } else {
        setOaepParameter((OAEPParameter)value);
      }
      break;

    case PSS_PARAMETER:
      if (value == null) {
        unsetPssParameter();
      } else {
        setPssParameter((PSSParameter)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TYPE:
      return getType();

    case DEFAULT_PARAMETER:
      return getDefaultParameter();

    case GCM_PARAMETER:
      return getGcmParameter();

    case OAEP_PARAMETER:
      return getOaepParameter();

    case PSS_PARAMETER:
      return getPssParameter();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TYPE:
      return isSetType();
    case DEFAULT_PARAMETER:
      return isSetDefaultParameter();
    case GCM_PARAMETER:
      return isSetGcmParameter();
    case OAEP_PARAMETER:
      return isSetOaepParameter();
    case PSS_PARAMETER:
      return isSetPssParameter();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof Parameter)
      return this.equals((Parameter)that);
    return false;
  }

  public boolean equals(Parameter that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_defaultParameter = true && this.isSetDefaultParameter();
    boolean that_present_defaultParameter = true && that.isSetDefaultParameter();
    if (this_present_defaultParameter || that_present_defaultParameter) {
      if (!(this_present_defaultParameter && that_present_defaultParameter))
        return false;
      if (!this.defaultParameter.equals(that.defaultParameter))
        return false;
    }

    boolean this_present_gcmParameter = true && this.isSetGcmParameter();
    boolean that_present_gcmParameter = true && that.isSetGcmParameter();
    if (this_present_gcmParameter || that_present_gcmParameter) {
      if (!(this_present_gcmParameter && that_present_gcmParameter))
        return false;
      if (!this.gcmParameter.equals(that.gcmParameter))
        return false;
    }

    boolean this_present_oaepParameter = true && this.isSetOaepParameter();
    boolean that_present_oaepParameter = true && that.isSetOaepParameter();
    if (this_present_oaepParameter || that_present_oaepParameter) {
      if (!(this_present_oaepParameter && that_present_oaepParameter))
        return false;
      if (!this.oaepParameter.equals(that.oaepParameter))
        return false;
    }

    boolean this_present_pssParameter = true && this.isSetPssParameter();
    boolean that_present_pssParameter = true && that.isSetPssParameter();
    if (this_present_pssParameter || that_present_pssParameter) {
      if (!(this_present_pssParameter && that_present_pssParameter))
        return false;
      if (!this.pssParameter.equals(that.pssParameter))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetType()) ? 131071 : 524287);
    if (isSetType())
      hashCode = hashCode * 8191 + type.getValue();

    hashCode = hashCode * 8191 + ((isSetDefaultParameter()) ? 131071 : 524287);
    if (isSetDefaultParameter())
      hashCode = hashCode * 8191 + defaultParameter.hashCode();

    hashCode = hashCode * 8191 + ((isSetGcmParameter()) ? 131071 : 524287);
    if (isSetGcmParameter())
      hashCode = hashCode * 8191 + gcmParameter.hashCode();

    hashCode = hashCode * 8191 + ((isSetOaepParameter()) ? 131071 : 524287);
    if (isSetOaepParameter())
      hashCode = hashCode * 8191 + oaepParameter.hashCode();

    hashCode = hashCode * 8191 + ((isSetPssParameter()) ? 131071 : 524287);
    if (isSetPssParameter())
      hashCode = hashCode * 8191 + pssParameter.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Parameter other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetType(), other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDefaultParameter(), other.isSetDefaultParameter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultParameter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.defaultParameter, other.defaultParameter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetGcmParameter(), other.isSetGcmParameter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGcmParameter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gcmParameter, other.gcmParameter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetOaepParameter(), other.isSetOaepParameter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOaepParameter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.oaepParameter, other.oaepParameter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPssParameter(), other.isSetPssParameter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPssParameter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pssParameter, other.pssParameter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Parameter(");
    boolean first = true;

    sb.append("type:");
    if (this.type == null) {
      sb.append("null");
    } else {
      sb.append(this.type);
    }
    first = false;
    if (isSetDefaultParameter()) {
      if (!first) sb.append(", ");
      sb.append("defaultParameter:");
      if (this.defaultParameter == null) {
        sb.append("null");
      } else {
        sb.append(this.defaultParameter);
      }
      first = false;
    }
    if (isSetGcmParameter()) {
      if (!first) sb.append(", ");
      sb.append("gcmParameter:");
      if (this.gcmParameter == null) {
        sb.append("null");
      } else {
        sb.append(this.gcmParameter);
      }
      first = false;
    }
    if (isSetOaepParameter()) {
      if (!first) sb.append(", ");
      sb.append("oaepParameter:");
      if (this.oaepParameter == null) {
        sb.append("null");
      } else {
        sb.append(this.oaepParameter);
      }
      first = false;
    }
    if (isSetPssParameter()) {
      if (!first) sb.append(", ");
      sb.append("pssParameter:");
      if (this.pssParameter == null) {
        sb.append("null");
      } else {
        sb.append(this.pssParameter);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (type == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'type' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (defaultParameter != null) {
      defaultParameter.validate();
    }
    if (gcmParameter != null) {
      gcmParameter.validate();
    }
    if (oaepParameter != null) {
      oaepParameter.validate();
    }
    if (pssParameter != null) {
      pssParameter.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ParameterStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public ParameterStandardScheme getScheme() {
      return new ParameterStandardScheme();
    }
  }

  private static class ParameterStandardScheme extends org.apache.thrift.scheme.StandardScheme<Parameter> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, Parameter struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = kl.hsm.server.svc.p11.ParameterType.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DEFAULT_PARAMETER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.defaultParameter = new DefaultParameter();
              struct.defaultParameter.read(iprot);
              struct.setDefaultParameterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // GCM_PARAMETER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.gcmParameter = new GCMParameter();
              struct.gcmParameter.read(iprot);
              struct.setGcmParameterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // OAEP_PARAMETER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.oaepParameter = new OAEPParameter();
              struct.oaepParameter.read(iprot);
              struct.setOaepParameterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PSS_PARAMETER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.pssParameter = new PSSParameter();
              struct.pssParameter.read(iprot);
              struct.setPssParameterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, Parameter struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        oprot.writeI32(struct.type.getValue());
        oprot.writeFieldEnd();
      }
      if (struct.defaultParameter != null) {
        if (struct.isSetDefaultParameter()) {
          oprot.writeFieldBegin(DEFAULT_PARAMETER_FIELD_DESC);
          struct.defaultParameter.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.gcmParameter != null) {
        if (struct.isSetGcmParameter()) {
          oprot.writeFieldBegin(GCM_PARAMETER_FIELD_DESC);
          struct.gcmParameter.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.oaepParameter != null) {
        if (struct.isSetOaepParameter()) {
          oprot.writeFieldBegin(OAEP_PARAMETER_FIELD_DESC);
          struct.oaepParameter.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.pssParameter != null) {
        if (struct.isSetPssParameter()) {
          oprot.writeFieldBegin(PSS_PARAMETER_FIELD_DESC);
          struct.pssParameter.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ParameterTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public ParameterTupleScheme getScheme() {
      return new ParameterTupleScheme();
    }
  }

  private static class ParameterTupleScheme extends org.apache.thrift.scheme.TupleScheme<Parameter> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Parameter struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeI32(struct.type.getValue());
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetDefaultParameter()) {
        optionals.set(0);
      }
      if (struct.isSetGcmParameter()) {
        optionals.set(1);
      }
      if (struct.isSetOaepParameter()) {
        optionals.set(2);
      }
      if (struct.isSetPssParameter()) {
        optionals.set(3);
      }
      oprot.writeBitSet(optionals, 4);
      if (struct.isSetDefaultParameter()) {
        struct.defaultParameter.write(oprot);
      }
      if (struct.isSetGcmParameter()) {
        struct.gcmParameter.write(oprot);
      }
      if (struct.isSetOaepParameter()) {
        struct.oaepParameter.write(oprot);
      }
      if (struct.isSetPssParameter()) {
        struct.pssParameter.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Parameter struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.type = kl.hsm.server.svc.p11.ParameterType.findByValue(iprot.readI32());
      struct.setTypeIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(4);
      if (incoming.get(0)) {
        struct.defaultParameter = new DefaultParameter();
        struct.defaultParameter.read(iprot);
        struct.setDefaultParameterIsSet(true);
      }
      if (incoming.get(1)) {
        struct.gcmParameter = new GCMParameter();
        struct.gcmParameter.read(iprot);
        struct.setGcmParameterIsSet(true);
      }
      if (incoming.get(2)) {
        struct.oaepParameter = new OAEPParameter();
        struct.oaepParameter.read(iprot);
        struct.setOaepParameterIsSet(true);
      }
      if (incoming.get(3)) {
        struct.pssParameter = new PSSParameter();
        struct.pssParameter.read(iprot);
        struct.setPssParameterIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

